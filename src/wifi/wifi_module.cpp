#include "wifi_module.h"
#include <esp_wifi.h>  // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–º–∏ Wi-Fi —Ñ—É–Ω–∫—Ü–∏—è–º–∏
#include <WiFi.h>      // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Wi-Fi –Ω–∞ Arduino

// Static event handler implementation
void WiFiModule::wifiEventHandler(arduino_event_id_t event, arduino_event_info_t info) {
    // –î–µ—Ç–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    switch (event) {
        case ARDUINO_EVENT_WIFI_AP_START:
            Serial.println("[WiFi] ‚úÖ –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù–ê - –≥–æ—Ç–æ–≤–∞ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º!");
            break;
        case ARDUINO_EVENT_WIFI_AP_STOP:
            Serial.println("[WiFi] ‚ùå –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –û–°–¢–ê–ù–û–í–õ–ï–ù–ê");
            break;
        case ARDUINO_EVENT_WIFI_AP_STACONNECTED:
            Serial.println("[WiFi] üéØ –£–°–ü–ï–•! –ö–ª–∏–µ–Ω—Ç –ü–û–î–ö–õ–Æ–ß–ò–õ–°–Ø –∫ —Ç–æ—á–∫–µ –¥–æ—Å—Ç—É–ø–∞!");
            Serial.printf("[WiFi] üì± MAC –∫–ª–∏–µ–Ω—Ç–∞: %02X:%02X:%02X:%02X:%02X:%02X\n",
                info.wifi_ap_staconnected.mac[0], info.wifi_ap_staconnected.mac[1],
                info.wifi_ap_staconnected.mac[2], info.wifi_ap_staconnected.mac[3],
                info.wifi_ap_staconnected.mac[4], info.wifi_ap_staconnected.mac[5]);
            break;
        case ARDUINO_EVENT_WIFI_AP_STADISCONNECTED:
            Serial.println("[WiFi] üîå –ö–ª–∏–µ–Ω—Ç –û–¢–ö–õ–Æ–ß–ò–õ–°–Ø –æ—Ç —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞");
            Serial.printf("[WiFi] üì± MAC –∫–ª–∏–µ–Ω—Ç–∞: %02X:%02X:%02X:%02X:%02X:%02X\n",
                info.wifi_ap_stadisconnected.mac[0], info.wifi_ap_stadisconnected.mac[1],
                info.wifi_ap_stadisconnected.mac[2], info.wifi_ap_stadisconnected.mac[3],
                info.wifi_ap_stadisconnected.mac[4], info.wifi_ap_stadisconnected.mac[5]);
            break;
        case ARDUINO_EVENT_WIFI_AP_STAIPASSIGNED:
            Serial.println("[WiFi] üåê IP –∞–¥—Ä–µ—Å –ù–ê–ó–ù–ê–ß–ï–ù –∫–ª–∏–µ–Ω—Ç—É - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
            break;
        case ARDUINO_EVENT_WIFI_READY:
            Serial.println("[WiFi] üîß WiFi —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ");
            break;
        case ARDUINO_EVENT_WIFI_AP_PROBEREQRECVED:
            // –õ–æ–≥–∏—Ä—É–µ–º probe requests –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            Serial.println("[WiFi] üîç –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –°–ö–ê–ù–ò–†–£–ï–¢ —Å–µ—Ç—å - —Å–µ—Ç—å –í–ò–î–ù–ê –∏ –¥–æ—Å—Ç—É–ø–Ω–∞!");
            break;
        default:
            Serial.printf("[WiFi] üì° WiFi —Å–æ–±—ã—Ç–∏–µ: %d (–¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)\n", event);
            break;
    }
}

void WiFiModule::init(const char* ssid, const char* password) {
    // Store strings safely in class members
    ssid_ = String(ssid);
    password_ = String(password);

    Serial.println("[WiFi] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –°–û–í–ú–ï–°–¢–ò–ú–£–Æ —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...");
    // –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ WiFi —Å–æ—Å—Ç–æ—è–Ω–∏—è
    WiFi.mode(WIFI_OFF);
    delay(1000);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WiFi –≤ —Ä–µ–∂–∏–º–µ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞ —Å —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    WiFi.mode(WIFI_AP);
    delay(500);

    // –ö–†–ò–¢–ò–ß–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–Ω–∏–∂–µ–Ω–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –º–æ–≥—É—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏
    WiFi.setTxPower(WIFI_POWER_17dBm);  // –°–Ω–∏–∂–µ–Ω–æ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP –¥–ª—è —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
    IPAddress local_ip(192, 168, 4, 1);      // IP –∞–¥—Ä–µ—Å —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
    IPAddress gateway(192, 168, 4, 1);       // –®–ª—é–∑ (—Ç–æ—Ç –∂–µ —á—Ç–æ –∏ AP)
    IPAddress subnet(255, 255, 255, 0);      // –ú–∞—Å–∫–∞ –ø–æ–¥—Å–µ—Ç–∏

    if (!WiFi.softAPConfig(local_ip, gateway, subnet)) {
        Serial.println("[WiFi] ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!");
        return;
    }

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π WiFi –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    WiFi.onEvent(wifiEventHandler);

    Serial.println("[WiFi] üéØ –í–ê–ñ–ù–´–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Æ:");
    Serial.println("[WiFi] üìã 1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WiFi –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ/–∫–æ–º–ø—å—é—Ç–µ—Ä–µ");
    Serial.printf("[WiFi] üìã 2. –ù–∞–π–¥–∏—Ç–µ —Å–µ—Ç—å: %s\n", ssid_.c_str());
    Serial.println("[WiFi] üìã 3. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ");
    Serial.printf("[WiFi] üìã 4. –ü–∞—Ä–æ–ª—å: %s\n", password_.c_str());
    Serial.println("[WiFi] üìã 5. –ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä");
    Serial.println("[WiFi] üìã 6. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞: http://192.168.4.1");
    Serial.println("[WiFi] üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –ö–ê–ù–ê–õ 1 –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏");
    Serial.println("[WiFi] ‚ö° –ú–æ—â–Ω–æ—Å—Ç—å —Å–Ω–∏–∂–µ–Ω–∞ –¥–æ 17dBm –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏");

    Serial.println("[WiFi] üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞...");
}

void WiFiModule::start() {
    Serial.println("[WiFi] üî• –°–¢–ê–†–¢ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞");

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if (ssid_.length() == 0) {
        Serial.println("[WiFi] ‚ùå –û–®–ò–ë–ö–ê: SSID –Ω–µ –∑–∞–¥–∞–Ω!");
        return;
    }

    if (WiFi.getMode() != WIFI_AP) {
        Serial.println("[WiFi] üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Ä–µ–∂–∏–º —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞...");
        WiFi.mode(WIFI_AP);
        delay(1000);
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏
    Serial.println("[WiFi] üì° –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ï–¢–ò:");
    Serial.printf("[WiFi] üì° SSID: %s (–∏—â–∏—Ç–µ —ç—Ç—É —Å–µ—Ç—å –≤ —Å–ø–∏—Å–∫–µ WiFi)\n", ssid_.c_str());
    Serial.printf("[WiFi] üîë –ü–∞—Ä–æ–ª—å: %s\n", password_.c_str());
    Serial.println("[WiFi] üåê IP –∞–¥—Ä–µ—Å: 192.168.4.1");
    Serial.println("[WiFi] üîß –ö–∞–Ω–∞–ª: 1 (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)");
    Serial.println("[WiFi] ‚ö° –ú–æ—â–Ω–æ—Å—Ç—å: 17dBm (–¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)");

    // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–π —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
    Serial.println("[WiFi] üîí –°–æ–∑–¥–∞—ë–º –ó–ê–©–ò–©–Å–ù–ù–£–Æ —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞...");

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: SSID, –ø–∞—Ä–æ–ª—å, –∫–∞–Ω–∞–ª 1 (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å), —Å–∫—Ä—ã—Ç–∞—è=false, –º–∞–∫—Å.–∫–ª–∏–µ–Ω—Ç–æ–≤=4
    bool success = WiFi.softAP(ssid_.c_str(), password_.c_str(), 1, false, 4);

    if (success) {
        Serial.println("[WiFi] ‚úÖ –ó–∞—â–∏—â—ë–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –°–û–ó–î–ê–ù–ê —É—Å–ø–µ—à–Ω–æ!");

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º MAC –∞–¥—Ä–µ—Å —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
        Serial.printf("[WiFi] üì± MAC –∞–¥—Ä–µ—Å AP: %s\n", WiFi.softAPmacAddress().c_str());

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º DHCP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤—ã–¥–∞—á–∏ IP
        Serial.println("[WiFi] üåê DHCP —Å–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω: 192.168.4.2 - 192.168.4.10");

        // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        esp_wifi_set_protocol(WIFI_IF_AP, WIFI_PROTOCOL_11B | WIFI_PROTOCOL_11G | WIFI_PROTOCOL_11N);

        Serial.println("[WiFi] üéØ –ì–û–¢–û–í–û! –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –∂–¥—ë—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π");
        Serial.println("[WiFi] üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:");
        Serial.println("[WiFi] üìã   1) –ù–∞–π–¥–∏—Ç–µ —Å–µ—Ç—å –≤ —Å–ø–∏—Å–∫–µ WiFi");
        Serial.println("[WiFi] üìã   2) –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å");
        Serial.println("[WiFi] üìã   3) –û—Ç–∫—Ä–æ–π—Ç–µ http://192.168.4.1 –≤ –±—Ä–∞—É–∑–µ—Ä–µ");
    } else {
        Serial.println("[WiFi] ‚ùå –û–®–ò–ë–ö–ê —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—â–∏—â—ë–Ω–Ω–æ–π —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞!");
        Serial.println("[WiFi] üîì –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –û–¢–ö–†–´–¢–£–Æ —Å–µ—Ç—å –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...");

        // Fallback: —Å–æ–∑–¥–∞—ë–º –æ—Ç–∫—Ä—ã—Ç—É—é —Å–µ—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if (WiFi.softAP(ssid_.c_str())) {
            Serial.println("[WiFi] ‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∞ –û–¢–ö–†–´–¢–ê–Ø —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ (–±–µ–∑ –ø–∞—Ä–æ–ª—è)");
            Serial.println("[WiFi] üîì –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è");
        } else {
            Serial.println("[WiFi] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞!");
        }
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    showStatus();
}

void WiFiModule::checkStability() {
    unsigned long now = millis();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    if (now - lastStabilityCheck_ < 5000) {
        return;
    }

    lastStabilityCheck_ = now;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    if (WiFi.getMode() != WIFI_AP && WiFi.getMode() != WIFI_AP_STA) {
        Serial.println("[WiFi] ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞!");
        Serial.println("[WiFi] üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞...");

        // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞
        WiFi.mode(WIFI_AP);
        delay(1000);

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        IPAddress local_ip(192, 168, 4, 1);
        IPAddress gateway(192, 168, 4, 1);
        IPAddress subnet(255, 255, 255, 0);
        WiFi.softAPConfig(local_ip, gateway, subnet);

        // –ü–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞ —Å —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        WiFi.setTxPower(WIFI_POWER_17dBm);
        WiFi.softAP(ssid_.c_str(), password_.c_str(), 1, 0, 4);

        Serial.println("[WiFi] ‚úÖ –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    int clients = WiFi.softAPgetStationNum();
    if (clients > 0) {
        Serial.printf("[WiFi] üë• –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: %d\n", clients);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö
        showConnectedClients();
    } else {
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ç–∏ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        static unsigned long lastInfoShow = 0;
        if (now - lastInfoShow > 30000) {
            lastInfoShow = now;
            Serial.println("[WiFi] üì° –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∞–∫—Ç–∏–≤–Ω–∞, –æ–∂–∏–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...");
            Serial.printf("[WiFi] üîç –ò—â–∏—Ç–µ —Å–µ—Ç—å: %s\n", ssid_.c_str());
            Serial.println("[WiFi] üåê IP –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞: http://192.168.4.1");
        }
    }
}

bool WiFiModule::isStable() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ WiFi –≤ —Ä–µ–∂–∏–º–µ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞
    wifi_mode_t mode = WiFi.getMode();
    if (mode != WIFI_AP && mode != WIFI_AP_STA) {
        return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ IP –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    IPAddress ip = WiFi.softAPIP();
    return (ip != IPAddress(0, 0, 0, 0));
}

void WiFiModule::stop() {
    Serial.println("[WiFi] üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞...");

    WiFi.softAPdisconnect(true);
    WiFi.mode(WIFI_OFF);
    Serial.println("[WiFi] ‚úÖ –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
}

void WiFiModule::showConnectedClients() {
    int clientCount = WiFi.softAPgetStationNum();

    Serial.printf("[WiFi] üë• –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤: %d\n", clientCount);
    if (clientCount > 0) {
        Serial.println("[WiFi] üì± –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:");
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö
        // –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤ –±—É–¥—É—â–µ–º
        Serial.println("[WiFi] üåê –ö–ª–∏–µ–Ω—Ç—ã –º–æ–≥—É—Ç –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ http://192.168.4.1");
    }
}

void WiFiModule::showStatus() {
    Serial.println("\n[WiFi] üìä === –°–¢–ê–¢–£–° –¢–û–ß–ö–ò –î–û–°–¢–£–ü–ê ===");
    Serial.printf("[WiFi] üì° –†–µ–∂–∏–º: %s\n",
                  WiFi.getMode() == WIFI_AP ? "–¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞" :
                  WiFi.getMode() == WIFI_AP_STA ? "AP+STA" : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π");
    Serial.printf("[WiFi] üåê IP –∞–¥—Ä–µ—Å: %s\n", WiFi.softAPIP().toString().c_str());
    Serial.printf("[WiFi] üì± MAC –∞–¥—Ä–µ—Å: %s\n", WiFi.softAPmacAddress().c_str());
    Serial.printf("[WiFi] üë• –ü–æ–¥–∫–ª—é—á–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: %d\n", WiFi.softAPgetStationNum());
    Serial.printf("[WiFi] üì° SSID: %s\n", ssid_.c_str());
    Serial.println("[WiFi] =====================================\n");
}

WiFiModule::~WiFiModule() {
    stop();
}
// src/wifi/wifi_module.cpp#include "wifi_module.h"#include <esp_wifi.h>  // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–º–∏ Wi-Fi —Ñ—É–Ω–∫—Ü–∏—è–º–∏#include <WiFi.h>      // –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Wi-Fi –Ω–∞ Arduino// Static event handler implementationvoid WiFiModule::wifiEventHandler(arduino_event_id_t event, arduino_event_info_t info) {    // –î–µ—Ç–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è    switch (event) {        case ARDUINO_EVENT_WIFI_AP_START:            Serial.println("[WiFi] ‚úÖ –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù–ê - –≥–æ—Ç–æ–≤–∞ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º!");            break;                    case ARDUINO_EVENT_WIFI_AP_STOP:            Serial.println("[WiFi] ‚ùå –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –û–°–¢–ê–ù–û–í–õ–ï–ù–ê");            break;                    case ARDUINO_EVENT_WIFI_AP_STACONNECTED:            Serial.println("[WiFi] üéØ –£–°–ü–ï–•! –ö–ª–∏–µ–Ω—Ç –ü–û–î–ö–õ–Æ–ß–ò–õ–°–Ø –∫ —Ç–æ—á–∫–µ –¥–æ—Å—Ç—É–ø–∞!");            Serial.printf("[WiFi] üì± MAC –∫–ª–∏–µ–Ω—Ç–∞: %02X:%02X:%02X:%02X:%02X:%02X\n",                         info.wifi_ap_staconnected.mac[0], info.wifi_ap_staconnected.mac[1],                         info.wifi_ap_staconnected.mac[2], info.wifi_ap_staconnected.mac[3],                         info.wifi_ap_staconnected.mac[4], info.wifi_ap_staconnected.mac[5]);            break;                    case ARDUINO_EVENT_WIFI_AP_STADISCONNECTED:            Serial.println("[WiFi] üîå –ö–ª–∏–µ–Ω—Ç –û–¢–ö–õ–Æ–ß–ò–õ–°–Ø –æ—Ç —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞");            Serial.printf("[WiFi] üì± MAC –∫–ª–∏–µ–Ω—Ç–∞: %02X:%02X:%02X:%02X:%02X:%02X\n",                         info.wifi_ap_stadisconnected.mac[0], info.wifi_ap_stadisconnected.mac[1],                         info.wifi_ap_stadisconnected.mac[2], info.wifi_ap_stadisconnected.mac[3],                         info.wifi_ap_stadisconnected.mac[4], info.wifi_ap_stadisconnected.mac[5]);            break;                    case ARDUINO_EVENT_WIFI_AP_STAIPASSIGNED:            Serial.println("[WiFi] üåê IP –∞–¥—Ä–µ—Å –ù–ê–ó–ù–ê–ß–ï–ù –∫–ª–∏–µ–Ω—Ç—É - –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ó–ê–í–ï–†–®–ï–ù–û!");            break;                    case ARDUINO_EVENT_WIFI_READY:            Serial.println("[WiFi] üîß WiFi —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ");            break;                    case ARDUINO_EVENT_WIFI_AP_PROBEREQRECVED:            // –õ–æ–≥–∏—Ä—É–µ–º probe requests –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è            Serial.println("[WiFi] üîç –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –°–ö–ê–ù–ò–†–£–ï–¢ —Å–µ—Ç—å - —Å–µ—Ç—å –í–ò–î–ù–ê –∏ –¥–æ—Å—Ç—É–ø–Ω–∞!");            break;                    default:            Serial.printf("[WiFi] üì° WiFi —Å–æ–±—ã—Ç–∏–µ: %d (–¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)\n", event);            break;    }}void WiFiModule::init(const char* ssid, const char* password) {    // Store strings safely in class members    ssid_ = String(ssid);    password_ = String(password);        Serial.println("[WiFi] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –°–û–í–ú–ï–°–¢–ò–ú–£–Æ —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...");        // –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ WiFi —Å–æ—Å—Ç–æ—è–Ω–∏—è    WiFi.mode(WIFI_OFF);    delay(1000);        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WiFi –≤ —Ä–µ–∂–∏–º–µ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞ —Å —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏    WiFi.mode(WIFI_AP);    delay(500);        // –ö–†–ò–¢–ò–ß–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–Ω–∏–∂–µ–Ω–Ω—É—é –º–æ—â–Ω–æ—Å—Ç—å –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏    // –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –º–æ–≥—É—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏    WiFi.setTxPower(WIFI_POWER_17dBm);  // –°–Ω–∏–∂–µ–Ω–æ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –º–æ—â–Ω–æ—Å—Ç–∏        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP –¥–ª—è —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞    IPAddress local_ip(192, 168, 4, 1);      // IP –∞–¥—Ä–µ—Å —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞    IPAddress gateway(192, 168, 4, 1);       // –®–ª—é–∑ (—Ç–æ—Ç –∂–µ —á—Ç–æ –∏ AP)    IPAddress subnet(255, 255, 255, 0);      // –ú–∞—Å–∫–∞ –ø–æ–¥—Å–µ—Ç–∏        if (!WiFi.softAPConfig(local_ip, gateway, subnet)) {        Serial.println("[WiFi] ‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!");        return;    }        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π WiFi –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏    WiFi.onEvent(wifiEventHandler);        Serial.println("[WiFi] üéØ –í–ê–ñ–ù–´–ï –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Æ:");    Serial.println("[WiFi] üìã 1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WiFi –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ/–∫–æ–º–ø—å—é—Ç–µ—Ä–µ");    Serial.printf("[WiFi] üìã 2. –ù–∞–π–¥–∏—Ç–µ —Å–µ—Ç—å: %s\n", ssid_.c_str());    Serial.println("[WiFi] üìã 3. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ");    Serial.printf("[WiFi] üìã 4. –ü–∞—Ä–æ–ª—å: %s\n", password_.c_str());    Serial.println("[WiFi] üìã 5. –ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä");    Serial.println("[WiFi] üìã 6. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞: http://192.168.4.1");    Serial.println("[WiFi] üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –ö–ê–ù–ê–õ 1 –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏");    Serial.println("[WiFi] ‚ö° –ú–æ—â–Ω–æ—Å—Ç—å —Å–Ω–∏–∂–µ–Ω–∞ –¥–æ 17dBm –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏");        Serial.println("[WiFi] üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞...");}void WiFiModule::start() {    Serial.println("[WiFi] üî• –°–¢–ê–†–¢ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞");        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º    if (ssid_.length() == 0) {        Serial.println("[WiFi] ‚ùå –û–®–ò–ë–ö–ê: SSID –Ω–µ –∑–∞–¥–∞–Ω!");        return;    }        if (WiFi.getMode() != WIFI_AP) {        Serial.println("[WiFi] üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Ä–µ–∂–∏–º —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞...");        WiFi.mode(WIFI_AP);        delay(1000);    }        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ç–∏    Serial.println("[WiFi] üì° –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ï–¢–ò:");    Serial.printf("[WiFi] üì° SSID: %s (–∏—â–∏—Ç–µ —ç—Ç—É —Å–µ—Ç—å –≤ —Å–ø–∏—Å–∫–µ WiFi)\n", ssid_.c_str());    Serial.printf("[WiFi] üîë –ü–∞—Ä–æ–ª—å: %s\n", password_.c_str());    Serial.println("[WiFi] üåê IP –∞–¥—Ä–µ—Å: 192.168.4.1");    Serial.println("[WiFi] üîß –ö–∞–Ω–∞–ª: 1 (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)");    Serial.println("[WiFi] ‚ö° –ú–æ—â–Ω–æ—Å—Ç—å: 17dBm (–¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)");        // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–π —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞    Serial.println("[WiFi] üîí –°–æ–∑–¥–∞—ë–º –ó–ê–©–ò–©–Å–ù–ù–£–Æ —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞...");        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: SSID, –ø–∞—Ä–æ–ª—å, –∫–∞–Ω–∞–ª 1 (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å), —Å–∫—Ä—ã—Ç–∞—è=false, –º–∞–∫—Å.–∫–ª–∏–µ–Ω—Ç–æ–≤=4    bool success = WiFi.softAP(ssid_.c_str(), password_.c_str(), 1, false, 4);        if (success) {        Serial.println("[WiFi] ‚úÖ –ó–∞—â–∏—â—ë–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –°–û–ó–î–ê–ù–ê —É—Å–ø–µ—à–Ω–æ!");                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º MAC –∞–¥—Ä–µ—Å —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞        Serial.printf("[WiFi] üì± MAC –∞–¥—Ä–µ—Å AP: %s\n", WiFi.softAPmacAddress().c_str());                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º DHCP —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≤—ã–¥–∞—á–∏ IP        Serial.println("[WiFi] üåê DHCP —Å–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω: 192.168.4.2 - 192.168.4.10");                // –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏        esp_wifi_set_protocol(WIFI_IF_AP, WIFI_PROTOCOL_11B | WIFI_PROTOCOL_11G | WIFI_PROTOCOL_11N);                Serial.println("[WiFi] üéØ –ì–û–¢–û–í–û! –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –∂–¥—ë—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π");        Serial.println("[WiFi] üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:");        Serial.println("[WiFi] üìã   1) –ù–∞–π–¥–∏—Ç–µ —Å–µ—Ç—å –≤ —Å–ø–∏—Å–∫–µ WiFi");        Serial.println("[WiFi] üìã   2) –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å");        Serial.println("[WiFi] üìã   3) –û—Ç–∫—Ä–æ–π—Ç–µ http://192.168.4.1 –≤ –±—Ä–∞—É–∑–µ—Ä–µ");            } else {        Serial.println("[WiFi] ‚ùå –û–®–ò–ë–ö–ê —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—â–∏—â—ë–Ω–Ω–æ–π —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞!");        Serial.println("[WiFi] üîì –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –û–¢–ö–†–´–¢–£–Æ —Å–µ—Ç—å –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...");                // Fallback: —Å–æ–∑–¥–∞—ë–º –æ—Ç–∫—Ä—ã—Ç—É—é —Å–µ—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è        if (WiFi.softAP(ssid_.c_str())) {            Serial.println("[WiFi] ‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∞ –û–¢–ö–†–´–¢–ê–Ø —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ (–±–µ–∑ –ø–∞—Ä–æ–ª—è)");            Serial.println("[WiFi] üîì –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è");        } else {            Serial.println("[WiFi] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞!");        }    }        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å    showStatus();}void WiFiModule::checkStability() {    unsigned long now = millis();        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥    if (now - lastStabilityCheck_ < 5000) {        return;    }        lastStabilityCheck_ = now;        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞    if (WiFi.getMode() != WIFI_AP && WiFi.getMode() != WIFI_AP_STA) {        Serial.println("[WiFi] ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: —Ç–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞!");        Serial.println("[WiFi] üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞...");                // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞        WiFi.mode(WIFI_AP);        delay(1000);                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏        IPAddress local_ip(192, 168, 4, 1);        IPAddress gateway(192, 168, 4, 1);        IPAddress subnet(255, 255, 255, 0);        WiFi.softAPConfig(local_ip, gateway, subnet);                // –ü–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞ —Å —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏        WiFi.setTxPower(WIFI_POWER_17dBm);        WiFi.softAP(ssid_.c_str(), password_.c_str(), 1, 0, 4);                Serial.println("[WiFi] ‚úÖ –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");    }        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤    int clients = WiFi.softAPgetStationNum();    if (clients > 0) {        Serial.printf("[WiFi] üë• –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: %d\n", clients);                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö        showConnectedClients();    } else {        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ç–∏ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥        static unsigned long lastInfoShow = 0;        if (now - lastInfoShow > 30000) {            lastInfoShow = now;            Serial.println("[WiFi] üì° –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∞–∫—Ç–∏–≤–Ω–∞, –æ–∂–∏–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...");            Serial.printf("[WiFi] üîç –ò—â–∏—Ç–µ —Å–µ—Ç—å: %s\n", ssid_.c_str());            Serial.println("[WiFi] üåê IP –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞: http://192.168.4.1");        }    }}bool WiFiModule::isStable() {    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ WiFi –≤ —Ä–µ–∂–∏–º–µ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞    wifi_mode_t mode = WiFi.getMode();    if (mode != WIFI_AP && mode != WIFI_AP_STA) {        return false;    }        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ IP –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ    IPAddress ip = WiFi.softAPIP();    return (ip != IPAddress(0, 0, 0, 0));}void WiFiModule::stop() {    Serial.println("[WiFi] üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞...");        WiFi.softAPdisconnect(true);    WiFi.mode(WIFI_OFF);        Serial.println("[WiFi] ‚úÖ –¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");}void WiFiModule::showConnectedClients() {    int clientCount = WiFi.softAPgetStationNum();        Serial.printf("[WiFi] üë• –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤: %d\n", clientCount);        if (clientCount > 0) {        Serial.println("[WiFi] üì± –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:");                // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–∞—Ö        // –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤ –±—É–¥—É—â–µ–º                Serial.println("[WiFi] üåê –ö–ª–∏–µ–Ω—Ç—ã –º–æ–≥—É—Ç –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ http://192.168.4.1");    }}void WiFiModule::showStatus() {    Serial.println("\n[WiFi] üìä === –°–¢–ê–¢–£–° –¢–û–ß–ö–ò –î–û–°–¢–£–ü–ê ===");    Serial.printf("[WiFi] üì° –†–µ–∂–∏–º: %s\n",                   WiFi.getMode() == WIFI_AP ? "–¢–æ—á–∫–∞ –¥–æ—Å—Ç—É–ø–∞" :                   WiFi.getMode() == WIFI_AP_STA ? "AP+STA" : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π");    Serial.printf("[WiFi] üåê IP –∞–¥—Ä–µ—Å: %s\n", WiFi.softAPIP().toString().c_str());    Serial.printf("[WiFi] üì± MAC –∞–¥—Ä–µ—Å: %s\n", WiFi.softAPmacAddress().c_str());    Serial.printf("[WiFi] üë• –ü–æ–¥–∫–ª—é—á–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: %d\n", WiFi.softAPgetStationNum());    Serial.printf("[WiFi] üì° SSID: %s\n", ssid_.c_str());    Serial.println("[WiFi] =====================================\n");}WiFiModule::~WiFiModule() {    stop();}